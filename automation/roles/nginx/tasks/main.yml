---

- name: Add official Nginx repository signing key
  apt_key: url=http://nginx.org/keys/nginx_signing.key state=present

- name: Add official Nginx repository
  apt_repository:
    repo: "deb http://nginx.org/packages/{{ansible_distribution|lower}} {{ansible_distribution_release}} nginx"
    state: present
  when: ansible_os_family == "Debian"

- name: Install Nginx
  package: pkg=nginx state=latest force=yes

- name: Replace the nginx.conf file
  template: src=nginx.conf.tpl dest=/etc/nginx/nginx.conf

- name: Copy performance settings file
  copy: src=performance.conf dest=/etc/nginx/conf.d/performance.conf owner=root group=root

- name: Copy the security settings file
  copy: src=security.conf dest=/etc/nginx/conf.d/security.conf owner=root group=root

- name: Copy the security deny files
  copy: src=deny-files.conf dest=/etc/nginx/conf.d/deny-files.conf owner=root group=root

- name: Copy the static content settings file
  copy: src=static-content.conf dest=/etc/nginx/conf.d/static-content.conf owner=root group=root

- name: Copy GZIP settings file
  copy: src=gzip.conf dest=/etc/nginx/conf.d/gzip.conf owner=root group=root

- name: Copy httpauth settings file
  copy: src=httpauth.conf dest=/etc/nginx/conf.d/httpauth.conf owner=root group=root  
  when: app.htpasswd_user is defined

- name: Ensures conf.d/ssl directory exists
  file: path=/etc/nginx/conf.d/ssl state=directory

- name: Create virtual hosts directories
  file: path=/etc/nginx/{{ item }} state=directory mode=0755
  with_items:
    - sites-available
    - sites-enabled

- name: Generate http auth password file
  htpasswd: 
      path: /etc/nginx/conf.d/passwdfile
      name: "{{ app.htpasswd_user }}"
      password: "{{ app.htpasswd_pass }}" 
      owner: root
      group: root
      mode: 0644  
  when: app.htpasswd_user is defined

- name: Vhost upload
  template: src=vhost.conf.j2 dest=/etc/nginx/sites-available/vhost.conf

- name: Enable vhost
  file: 
    src: /etc/nginx/sites-available/vhost.conf
    dest: /etc/nginx/sites-enabled/vhost.conf 
    state: link

# vhost2
- name: Vhost2 upload
  template: src=vhost2.conf.j2 dest=/etc/nginx/sites-available/vhost2.conf
  when: nginx.service_document_root2 is defined

- name: Enable vhost2
  file: 
    src: /etc/nginx/sites-available/vhost2.conf
    dest: /etc/nginx/sites-enabled/vhost2.conf 
    state: link
  when: nginx.service_document_root2 is defined

# ssl
- name: Generate dhparams file
  shell: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
  when: nginx.generate_dhparams == "on"
  
- name: Generate self signed certificate
  shell: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/{{ nginx.service_host }}.key -out /etc/ssl/certs/{{ nginx.service_host }}.crt -subj "/C={{item.country}}/ST={{item.state}}/L={{item.locality}}/O={{item.organization}}/OU={{item.organizationalunit}}/CN={{item.commonname}}/emailAddress={{item.email}}"
  with_items: "{{ nginx.self_signed_certificate }}"
  when: nginx.generate_ssl_now == "on"

- name: Ensure Nginx has started
  service:
    name: nginx
    state: restarted
    enabled: yes