openapi: 3.0.0
info:
  description: API pentru aplicatia de raportare integrata a DSU
  version: 0.0.1
  title: DSU API
  termsOfService: /termeni-si-conditii
  contact:
    name: API Support
    email: tudor.rusu@hotmail.com
    url: 'https://civictech.ro/contact'
  license:
    name: Mozilla Public License 2.0
    url: 'https://www.mozilla.org/en-US/MPL/2.0/'
servers:
  - url: 'https://api.dsu.ro'
  - url: 'https://staging.api.dsu.ro'
  - url: 'https://dsu.civictech.local'
paths:
  /utilizator/logare:
    post:
      summary: autentificare utilizator
      description: >-
        Autentifica un utilizator pe baza parolei si user-name (email) si
        returneaza un token criptat pentru access API
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
      requestBody:
        description: Datele pentru autentificare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - parola
              properties:
                email:
                  type: string
                  example: tudor.rusu@hotmail.com
                parola:
                  type: string
                  example: '123654789'
      tags:
        - Utilizatori
      responses:
        200 Success:
          description: API Token criptat.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  api_key: >-
                    eyJpdiI6IlpOQ04wTURNcUEzK0dsMlE2OW5paGc9PSIsInZhbHVlIjoiZExURk1maHV6bHRIaU5lQkMyMStPM3RRMzQwRnZuK3ZXdThNUG9FemEyNGpjN3JXNGxaVTBYVlZwdWJFeWIzMlE2SlhLZXk1aWxTXC9NU2szRmlOd1dxbWRUbzRjc1YzdTI4VFdpSVcrdmh3PSIsIm1hYyI6IjUyMGRlZDJkMTk5NDFhMmM5MDEyMzIwNmNlNmIwMGE4OGZiNTA3NzRlYjUwZjNkMWZmNTUzMGQyYmIxZjFjOWMifQ==
        200 Fail:
          description: 'Utilizator existent, dar inactiv.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: 'Utilizatorul #1 [tudor.rusu@hotmail.com] inactiv'
  /utilizator/delogare:
    post:
      summary: deautentificare utilizator
      description: Deautentifica un utilizator pe baza token-ului criptat
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      tags:
        - Utilizatori
      responses:
        '200':
          description: Success. API Token criptat.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/utilizator/{id}':
    get:
      summary: READ - utilizator
      description: 'Returneaza un user bazat pe id, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID-ul utilizatorului
      tags:
        - Utilizatori
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Obiect JSON cu utilizatorul.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  user:
                    id: 5
                    nume: Tester
                    email: tester.structura@dsu.ro
                    created_at: '2018-03-26 16:41:19'
                    updated_at: '2018-03-26 16:41:19'
                    avatar: users/default.png
                    role_id: 6
                    deleted_at: null
                    prenume: Structura Smurd
                    telefon_s: null
                    telefon_p: null
                    adresa: null
                    cod_postal: null
                    localitate: null
                    judet: null
                    unitate_id: 7
                    active: 1
                    rol:
                      id: 6
                      name: structura
                      display_name: Coordonator structura
                      created_at: '2018-03-24 19:02:35'
                      updated_at: '2018-03-24 19:02:35'
                    unitate:
                      id: 7
                      parent_id: 4
                      nume: SMURD National
                      descriere: null
                      adresa: null
                      cod_postal: null
                      telefon: null
                      created_at: '2018-03-26 16:39:21'
                      updated_at: '2018-03-26 16:39:21'
                      deleted_at: null
                      localitate: Targu-Mures
                      judet: Mures
                      departament_id: 1
                      departament:
                        id: 1
                        nume: SMURD
                        descriere: >-
                          Scopul SMURD este transferul unui echipaj medical
                          spitalicesc, cu dotarea necesară, la locul unde se
                          află un pacient în stare critică, în vederea acordării
                          de asistență medicală de urgență calificată.
                        adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                        cod_postal: '540136'
                        localitate: Targu-Mures
                        judet: Mures
                        telefon: +40 265 210 110
                        created_at: '2018-03-26 09:51:28'
                        updated_at: '2018-03-26 09:51:28'
                        deleted_at: null
                      parent:
                        id: 4
                        parent_id: 7
                        nume: Statia centrala SMURD SIBIU
                        descriere: SMURD judet Sibiu
                        adresa: 'str. Vasile Carlova, nr.16-22'
                        cod_postal: '550017'
                        telefon: +40 269 123 456
                        created_at: '2018-03-26 10:25:29'
                        updated_at: '2018-03-28 08:37:34'
                        deleted_at: null
                        localitate: Sibiu
                        judet: Sibiu
                        departament_id: 1
                items:
                  $ref: '#/components/schemas/Users'
        200 Fail:
          description: Utilizator inexistent - id-ul nu exista in baza de date.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Utilizator inexistent.
  '/utilizator/email/{email}':
    get:
      summary: READ - utilizator
      description: 'Returneaza un user bazat pe email, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: email-ul utilizatorului
      tags:
        - Utilizatori
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Obiect JSON cu utilizatorul.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  user:
                    id: 5
                    nume: Tester
                    email: tester.structura@dsu.ro
                    created_at: '2018-03-26 16:41:19'
                    updated_at: '2018-03-26 16:41:19'
                    avatar: users/default.png
                    role_id: 6
                    deleted_at: null
                    prenume: Structura Smurd
                    telefon_s: null
                    telefon_p: null
                    adresa: null
                    cod_postal: null
                    localitate: null
                    judet: null
                    unitate_id: 7
                    active: 1
                    rol:
                      id: 6
                      name: structura
                      display_name: Coordonator structura
                      created_at: '2018-03-24 19:02:35'
                      updated_at: '2018-03-24 19:02:35'
                    unitate:
                      id: 7
                      parent_id: 4
                      nume: SMURD National
                      descriere: null
                      adresa: null
                      cod_postal: null
                      telefon: null
                      created_at: '2018-03-26 16:39:21'
                      updated_at: '2018-03-26 16:39:21'
                      deleted_at: null
                      localitate: Targu-Mures
                      judet: Mures
                      departament_id: 1
                      departament:
                        id: 1
                        nume: SMURD
                        descriere: >-
                          Scopul SMURD este transferul unui echipaj medical
                          spitalicesc, cu dotarea necesară, la locul unde se
                          află un pacient în stare critică, în vederea acordării
                          de asistență medicală de urgență calificată.
                        adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                        cod_postal: '540136'
                        localitate: Targu-Mures
                        judet: Mures
                        telefon: +40 265 210 110
                        created_at: '2018-03-26 09:51:28'
                        updated_at: '2018-03-26 09:51:28'
                        deleted_at: null
                      parent:
                        id: 4
                        parent_id: 7
                        nume: Statia centrala SMURD SIBIU
                        descriere: SMURD judet Sibiu
                        adresa: 'str. Vasile Carlova, nr.16-22'
                        cod_postal: '550017'
                        telefon: +40 269 123 456
                        created_at: '2018-03-26 10:25:29'
                        updated_at: '2018-03-28 08:37:34'
                        deleted_at: null
                        localitate: Sibiu
                        judet: Sibiu
                        departament_id: 1
                items:
                  $ref: '#/components/schemas/Users'
        200 Fail:
          description: Utilizator inexistent - email-ul nu exista in baza de date.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Utilizator inexistent.
  '/utilizator/profil':
    get:
      summary: READ - utilizator
      description: 'Returneaza datele utilizatorului logat, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      tags:
        - Utilizatori
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Obiect JSON cu utilizatorul.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  user:
                    id: 5
                    nume: Tester
                    email: tester.structura@dsu.ro
                    created_at: '2018-03-26 16:41:19'
                    updated_at: '2018-03-26 16:41:19'
                    avatar: users/default.png
                    role_id: 6
                    deleted_at: null
                    prenume: Structura Smurd
                    telefon_s: null
                    telefon_p: null
                    adresa: null
                    cod_postal: null
                    localitate: null
                    judet: null
                    unitate_id: 7
                    active: 1
                    rol:
                      id: 6
                      name: structura
                      display_name: Coordonator structura
                      created_at: '2018-03-24 19:02:35'
                      updated_at: '2018-03-24 19:02:35'
                    unitate:
                      id: 7
                      parent_id: 4
                      nume: SMURD National
                      descriere: null
                      adresa: null
                      cod_postal: null
                      telefon: null
                      created_at: '2018-03-26 16:39:21'
                      updated_at: '2018-03-26 16:39:21'
                      deleted_at: null
                      localitate: Targu-Mures
                      judet: Mures
                      departament_id: 1
                      departament:
                        id: 1
                        nume: SMURD
                        descriere: >-
                          Scopul SMURD este transferul unui echipaj medical
                          spitalicesc, cu dotarea necesară, la locul unde se
                          află un pacient în stare critică, în vederea acordării
                          de asistență medicală de urgență calificată.
                        adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                        cod_postal: '540136'
                        localitate: Targu-Mures
                        judet: Mures
                        telefon: +40 265 210 110
                        created_at: '2018-03-26 09:51:28'
                        updated_at: '2018-03-26 09:51:28'
                        deleted_at: null
                      parent:
                        id: 4
                        parent_id: 7
                        nume: Statia centrala SMURD SIBIU
                        descriere: SMURD judet Sibiu
                        adresa: 'str. Vasile Carlova, nr.16-22'
                        cod_postal: '550017'
                        telefon: +40 269 123 456
                        created_at: '2018-03-26 10:25:29'
                        updated_at: '2018-03-28 08:37:34'
                        deleted_at: null
                        localitate: Sibiu
                        judet: Sibiu
                        departament_id: 1
                items:
                  $ref: '#/components/schemas/Users'
        200 Fail:
          description: Utilizator inexistent.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Utilizator inexistent.
  /utilizator/editare:
    put:
      summary: EDIT - editare utilizator
      description: Editarea datelor unui utilizator
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru editare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              example:
                id: 74
                nume: Nume modificat
                prenume: Prenume modificat
              items:
                $ref: '#/components/schemas/Users'
      tags:
        - Utilizatori
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Utilizator modificat cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Utilizator [test.add@dsu.ro] modificat cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Utilizator inexistent.
  /utilizator/resetare-parola:
    put:
      summary: EDIT - resetare parola utilizator
      description: Resetarea parolei unui utilizator
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Noua parola
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - parola
              example:
                parola: asdagfsdh656asdasd
              items:
                $ref: '#/components/schemas/Users'
      tags:
        - Utilizatori
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Utilizator modificat cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: >-
                    Parola utilizatorului [test.add@dsu.ro] modificata cu
                    succes.
  /utilizator/adaugare:
    post:
      summary: ADD - inregistrare utilizator nou
      description: Inregistrarea unui nou utilizator
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru iregistrare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - nume
                - role_id
                - telefon_s
                - unitate_id
              example:
                nume: Test
                prenume: Adaugare Utilizator
                email: test.add@dsu.ro
                role_id: '3'
                telefon_s: '+40569874569'
                telefon_p: 0230569874
                adresa: 'str. Mihai Viteazau, nr. 5'
                cod_postal: '52987'
                localitate: Selimbar
                judet: Sibiu
                unitate_id: '7'
              items:
                $ref: '#/components/schemas/Users'
      tags:
        - Utilizatori
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: 'Utilizator creat, dar inactiv.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Utilizator [test.add@dsu.ro] creat, dar inactiv'
        200 Fail:
          description: Lipsa unui camp obligatoriu.
          content:
            application/json:
              schema:
                type: object
                example:
                  email:
                    - The email field is required.
  '/utilizator/activare/{token}':
    get:
      summary: activare utilizator
      description: 'Activeaza un cont de utilizator, bazat pe remember_token'
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: remember_token
      tags:
        - Utilizatori
      responses:
        200 Success:
          description: Contul a fost activat cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: Contul a fost activat cu succes.
        200 Fail:
          description: >-
            Utilizator activat deja sau inexistent - id-ul nu exista in baza de
            date.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Utilizator activat deja sau inexistent.
  '/utilizator/stergere/{id}':
    delete:
      summary: DELETE - utilizator
      description: 'Sterge(soft) un utilizator bazat pe id, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: id-ul utilizatorului
      tags:
        - Utilizatori
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Utilizator sters cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Utilizator [test.add@dsu.ro] sters cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: >-
                    Utilizatorul [test.add@dsu.ro] nu poate fi sters. Probabil
                    nu exista.
  /roluri:
    get:
      summary: 'BROWSE - roluri, inclusiv permisiuni'
      description: 'Returneaza toata colectia Roluri, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      tags:
        - Roluri si Permisiuni
      responses:
        '200':
          description: Success. Lista obiect JSON cu toate rolurile.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    name: sysadmin
                    display_name: Administrator sistem
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                    permisiuni:
                      - id: 1
                        key: browse_admin
                        table_name: null
                        created_at: '2018-03-08 18:23:37'
                        updated_at: '2018-03-08 18:23:37'
                        permission_group_id: null
                        deleted_at: null
                        pivot:
                          role_id: 1
                          permission_id: 1
                      - id: 5
                        key: browse_menus
                        table_name: menus
                        created_at: '2018-03-08 18:23:37'
                        updated_at: '2018-03-08 18:23:37'
                        permission_group_id: null
                        deleted_at: null
                        pivot:
                          role_id: 1
                          permission_id: 5
                  - id: 2
                    name: raportor
                    display_name: Raportor
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                    permisiuni:
                      - id: 36
                        key: browse_unitati
                        table_name: unitati
                        created_at: '2018-03-08 18:23:37'
                        updated_at: '2018-03-08 18:23:37'
                        permission_group_id: null
                        deleted_at: null
                        pivot:
                          role_id: 2
                          permission_id: 36
                items:
                  $ref: '#/components/schemas/Roles'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/rol/{id}':
    get:
      summary: READ - rol
      description: 'Returneaza un rol bazat pe id, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID-ul rolului
      tags:
        - Roluri si Permisiuni
      responses:
        '200':
          description: Success. Obiect JSON cu rolul.
          content:
            application/json:
              schema:
                type: array
                example:
                  id: 2
                  name: raportor
                  display_name: Raportor
                  created_at: '2018-03-26 16:39:21'
                  updated_at: '2018-03-26 16:39:21'
                  deleted_at: null
                  permisiuni:
                    - id: 36
                      key: browse_unitati
                      table_name: unitati
                      created_at: '2018-03-08 18:23:37'
                      updated_at: '2018-03-08 18:23:37'
                      permission_group_id: null
                      deleted_at: null
                      pivot:
                        role_id: 2
                        permission_id: 36
                items:
                  $ref: '#/components/schemas/Roles'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /rol/editare:
    put:
      summary: EDIT - editare rol
      description: 'Editarea datelor unui rol, inclusiv datele din tabela pivot'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru editare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - request_id
              example:
                request_id: 12
                display_name: Nume modificat rol
                pivot:
                  - 1
                  - 61
              items:
                $ref: '#/components/schemas/Roles'
      tags:
        - Roluri si Permisiuni
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Rol modificat cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Rolul [Nume modificat rol] modificat cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Rol inexistent.
  /rol/adaugare:
    post:
      summary: ADD - inregistrare rol nou
      description: 'Inregistrarea unui nou rol, cu pivotare pe permisiuni'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru iregistrare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              example:
                name: rol_testare_cu_permisiuni
                pivot:
                  - 61
                  - 62
              items:
                $ref: '#/components/schemas/Roles'
      tags:
        - Roluri si Permisiuni
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Rol creata.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Rolul [rol_testare_cu_permisiuni] creat.'
        200 Fail:
          description: Lipsa unui camp obligatoriu.
          content:
            application/json:
              schema:
                type: object
                example:
                  name:
                    - The name field is required.
  '/rol/stergere/{id}':
    delete:
      summary: DELETE - rol
      description: 'Sterge(soft) un rol bazat pe id, inclusiv relatii pivot'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: id-ul rolului
      tags:
        - Roluri si Permisiuni
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Rol sters cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Rolul [Rol Testare] sters cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Rolul nu poate fi sters. Probabil nu exista.
  /permisiuni:
    get:
      summary: 'BROWSE - permisiuni, inclusiv roluri'
      description: 'Returneaza toata colectia Permisiuni, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      tags:
        - Roluri si Permisiuni
      responses:
        '200':
          description: Success. Lista obiect JSON cu toate permisiunile.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    key: browse_admin
                    table_name: null
                    created_at: '2018-03-08 18:23:37'
                    updated_at: '2018-03-08 18:23:37'
                    permission_group_id: null
                    deleted_at: null
                    roluri:
                      - id: 1
                        name: sysadmin
                        display_name: Administrator sistem
                        created_at: '2018-03-26 16:39:21'
                        updated_at: '2018-03-26 16:39:21'
                        deleted_at: null
                        pivot:
                          role_id: 1
                          permission_id: 1
                      - id: 2
                        name: raportor
                        display_name: Raportor
                        created_at: '2018-03-26 16:39:21'
                        updated_at: '2018-03-26 16:39:21'
                        deleted_at: null
                        pivot:
                          role_id: 2
                          permission_id: 1
                  - id: 2
                    key: browse_database
                    table_name: null
                    created_at: '2018-03-08 18:23:37'
                    updated_at: '2018-03-08 18:23:37'
                    permission_group_id: null
                    deleted_at: null
                    roluri:
                      - id: 1
                        name: sysadmin
                        display_name: Administrator sistem
                        created_at: '2018-03-26 16:39:21'
                        updated_at: '2018-03-26 16:39:21'
                        deleted_at: null
                        pivot:
                          role_id: 1
                          permission_id: 2
                items:
                  $ref: '#/components/schemas/Permissions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/permisiune/{id}':
    get:
      summary: READ - permisiune
      description: 'Returneaza o permisiune bazat pe id, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID-ul permisiunii
      tags:
        - Roluri si Permisiuni
      responses:
        '200':
          description: Success. Obiect JSON cu permisiunea.
          content:
            application/json:
              schema:
                type: array
                example:
                  id: 2
                  key: browse_database
                  table_name: null
                  created_at: '2018-03-08 18:23:37'
                  updated_at: '2018-03-08 18:23:37'
                  permission_group_id: null
                  deleted_at: null
                  roluri:
                    - id: 1
                      name: sysadmin
                      display_name: Administrator sistem
                      created_at: '2018-03-26 16:39:21'
                      updated_at: '2018-03-26 16:39:21'
                      deleted_at: null
                      pivot:
                        role_id: 1
                        permission_id: 2
                items:
                  $ref: '#/components/schemas/Permissions'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /permisiune/editare:
    put:
      summary: EDIT - editare permisiune
      description: 'Editarea datelor unei permisiuni, inclusiv datele din tabela pivot'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru editare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - request_id
              example:
                request_id: 12
                key: Nume modificat permisiune
              items:
                $ref: '#/components/schemas/Permissions'
      tags:
        - Roluri si Permisiuni
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Permisiune modificata cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: >-
                    Permisiunea [Nume modificat permisiune] modificata cu
                    succes.
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Permisiune inexistenta.
  /permisiune/adaugare:
    post:
      summary: ADD - inregistrare permisiune noua
      description: 'Inregistrarea unei noi permisiuni, cu pivotare pe roluri'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru iregistrare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - key
              example:
                key: permisiune_testare_cu_roluri
                pivot:
                  - 1
                  - 10
              items:
                $ref: '#/components/schemas/Permissions'
      tags:
        - Roluri si Permisiuni
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Permisiune creata.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Permisiunea [permisiune_testare_cu_roluri] creata.'
        200 Fail:
          description: Lipsa unui camp obligatoriu.
          content:
            application/json:
              schema:
                type: object
                example:
                  key:
                    - The key field is required.
  '/permisiune/stergere/{id}':
    delete:
      summary: DELETE - permisiune
      description: 'Sterge(soft) o permisiune bazat pe id, inclusiv relatii pivot'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: id-ul permisiunii
      tags:
        - Roluri si Permisiuni
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Permisiune stearsa cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Permisiunea [test_permisiune] stearsa cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Permisiunea nu poate fi stearsa. Probabil nu exista.
  /localitati:
    get:
      summary: BROWSE - localitati
      description: >-
        Returneaza toata colectia Localitati, inclusiv relatii, bazat pe rolul
        utilizatorului
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      tags:
        - Localitati
      responses:
        '200':
          description: Success. Lista obiect JSON cu toate localitatile.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    judet_id: 1
                    slug: abrud
                    nume: Abrud
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                    judet:
                      id: 1
                      slug: alba
                      nume: Alba
                      created_at: '2018-03-25 11:21:19'
                      updated_at: null
                      deleted_at: null
                  - id: 2
                    judet_id: 1
                    slug: aiud
                    nume: Aiud
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                    judet:
                      id: 1
                      slug: alba
                      nume: Alba
                      created_at: '2018-03-25 11:21:19'
                      updated_at: null
                      deleted_at: null
                items:
                  $ref: '#/components/schemas/Localitati'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/localitati/judet/{slug}':
    get:
      summary: BROWSE - localitati dintr-un judet
      description: 'Returneaza toate localitatile dintr-um judet, bazat pe slug-ul judetului'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: slug
          required: true
          schema:
            type: string
          description: Slug-ul judetului
      tags:
        - Localitati
      responses:
        '200':
          description: Success. Lista obiect JSON cu toate localitatile dintr-um judet.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    judet_id: 1
                    slug: abrud
                    nume: Abrud
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                    judet:
                      id: 1
                      slug: alba
                      nume: Alba
                      created_at: '2018-03-25 11:21:19'
                      updated_at: null
                      deleted_at: null
                  - id: 2
                    judet_id: 1
                    slug: aiud
                    nume: Aiud
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                    judet:
                      id: 1
                      slug: alba
                      nume: Alba
                      created_at: '2018-03-25 11:21:19'
                      updated_at: null
                      deleted_at: null
                items:
                  $ref: '#/components/schemas/Localitati'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/localitate/{id}':
    get:
      summary: READ - localitate
      description: 'Returneaza o localitate bazat pe id, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID-ul localitatii
      tags:
        - Localitati
      responses:
        '200':
          description: Success. Obiect JSON cu localitatea.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    judet_id: 1
                    slug: abrud
                    nume: Abrud
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                    judet:
                      id: 1
                      slug: alba
                      nume: Alba
                      created_at: '2018-03-25 11:21:19'
                      updated_at: null
                      deleted_at: null
                items:
                  $ref: '#/components/schemas/Localitati'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/localitate/slug/{slug}':
    get:
      summary: READ - localitate
      description: 'Returneaza o localitate bazat pe slug, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: slug
          required: true
          schema:
            type: string
          description: Slug-ul localitatii
      tags:
        - Localitati
      responses:
        '200':
          description: Success. Obiect JSON cu localitatea.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    judet_id: 1
                    slug: abrud
                    nume: Abrud
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                    judet:
                      id: 1
                      slug: alba
                      nume: Alba
                      created_at: '2018-03-25 11:21:19'
                      updated_at: null
                      deleted_at: null
                items:
                  $ref: '#/components/schemas/Localitati'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /localitate/editare:
    put:
      summary: EDIT - editare localitate
      description: Editarea datelor unei localitati
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru editare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - request_id
              example:
                request_id: 4
                nume: Nume modificat
                judet_id: 1
              items:
                $ref: '#/components/schemas/Localitati'
      tags:
        - Localitati
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Localitate modificata cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Localitatea [Abrud] modificata cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Localitate inexistenta.
  /localitate/adaugare:
    post:
      summary: ADD - inregistrare localitate noua
      description: Inregistrarea unei noi localitati
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru iregistrare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nume
                - judet_id
              example:
                nume: Abrud
                judet_id: '1'
              items:
                $ref: '#/components/schemas/Localitati'
      tags:
        - Localitati
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Localitate creata.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Localitatea [Abrud] creata.'
        200 Fail:
          description: Lipsa unui camp obligatoriu.
          content:
            application/json:
              schema:
                type: object
                example:
                  email:
                    - The judet id field is required.
  '/localitate/stergere/{id}':
    delete:
      summary: DELETE - localitati
      description: 'Sterge(soft) o localitate bazat pe id, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: id-ul localitatii
      tags:
        - Localitati
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Localitate stearsa cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Localitatea [Abrud -> abrud-58] stearsa cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Localitatea nu poate fi stearsa. Probabil nu exista.
  /judete:
    get:
      summary: BROWSE - judete
      description: Returneaza toata colectia Judete
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      tags:
        - Judete
      responses:
        '200':
          description: Success. Lista obiect JSON cu toate judetele.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    slug: alba
                    nume: Alba
                    created_at: '2018-03-25 11:21:19'
                    updated_at: null
                    deleted_at: null
                  - id: 2
                    slug: arad
                    nume: Arad
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                items:
                  $ref: '#/components/schemas/Judete'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/judet/{id}':
    get:
      summary: READ - judet
      description: Returneaza un judet bazat pe id
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID-ul judetului
      tags:
        - Judete
      responses:
        '200':
          description: Success. Obiect JSON cu judetul.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    slug: alba
                    nume: Alba
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                items:
                  $ref: '#/components/schemas/Judete'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/judet/slug/{slug}':
    get:
      summary: READ - judet
      description: Returneaza un judet bazat pe slug
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: slug
          required: true
          schema:
            type: string
          description: slug-ul judetului
      tags:
        - Judete
      responses:
        '200':
          description: Success. Obiect JSON cu judetul.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    slug: alba
                    nume: Alba
                    created_at: '2018-03-25 11:46:19'
                    updated_at: null
                    deleted_at: null
                items:
                  $ref: '#/components/schemas/Judete'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /judet/editare:
    put:
      summary: EDIT - editare judet
      description: Editarea datelor unui judet
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru editare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - request_id
              example:
                request_id: 1
                nume: Nume modificat
              items:
                $ref: '#/components/schemas/Judete'
      tags:
        - Judete
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Localitate modificata cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Juedtul [Alba] modificat cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Judet inexistent.
  /judet/adaugare:
    post:
      summary: ADD - inregistrare judet nou
      description: Inregistrarea unui nou judet
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru iregistrare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nume
              example:
                nume: Alba
              items:
                $ref: '#/components/schemas/Judete'
      tags:
        - Judete
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Judet creat.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Judetul [Alba -> alba] creat.'
        200 Fail:
          description: Lipsa unui camp obligatoriu.
          content:
            application/json:
              schema:
                type: object
                example:
                  email:
                    - The nume field is required.
  '/judet/stergere/{id}':
    delete:
      summary: DELETE - judete
      description: 'Sterge(soft) un judet bazat pe id, inclusiv relatii - localitati'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: id-ul judetului
      tags:
        - Judete
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Judet stearsa cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Judetul [Alba -> alba] stears cu succes.'
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, numele de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Judetul nu poate fi stears. Probabil nu exista.
  /unitati:
    get:
      summary: BROWSE - unitati
      description: 'Returneaza toata colectia Unitati, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      tags:
        - Unitati
      responses:
        '200':
          description: Success. Lista obiect JSON cu toate unitatile.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 7
                    parent_id: null
                    nume: SMURD National
                    descriere: null
                    adresa: null
                    cod_postal: null
                    telefon: null
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                    localitate: Targu-Mures
                    judet: Mures
                    departament_id: 1
                    parent: null
                    departament:
                      id: 1
                      nume: SMURD
                      descriere: >-
                        Scopul SMURD este transferul unui echipaj medical
                        spitalicesc, cu dotarea necesară, la locul unde se află
                        un pacient în stare critică, în vederea acordării de
                        asistență medicală de urgență calificată.
                      adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                      cod_postal: '540136'
                      localitate: Targu-Mures
                      judet: Mures
                      telefon: +40 265 210 110
                      created_at: '2018-03-26 09:51:28'
                      updated_at: '2018-03-26 09:51:28'
                      deleted_at: null
                  - id: 4
                    parent_id: 7
                    nume: Statia centrala SMURD SIBIU
                    descriere: SMURD judet Sibiu
                    adresa: 'str. Vasile Carlova, nr.16-22'
                    cod_postal: '550017'
                    telefon: +40 269 123 456
                    created_at: '2018-03-26 10:25:29'
                    updated_at: '2018-03-28 08:37:34'
                    deleted_at: null
                    localitate: Sibiu
                    judet: Sibiu
                    departament_id: 1
                    parent:
                      id: 7
                      parent_id: null
                      nume: SMURD National
                      descriere: null
                      adresa: null
                      cod_postal: null
                      telefon: null
                      created_at: '2018-03-26 16:39:21'
                      updated_at: '2018-03-26 16:39:21'
                      deleted_at: null
                      localitate: Targu-Mures
                      judet: Mures
                      departament_id: 1
                    departament:
                      id: 1
                      nume: SMURD
                      descriere: >-
                        Scopul SMURD este transferul unui echipaj medical
                        spitalicesc, cu dotarea necesară, la locul unde se află
                        un pacient în stare critică, în vederea acordării de
                        asistență medicală de urgență calificată.
                      adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                      cod_postal: '540136'
                      localitate: Targu-Mures
                      judet: Mures
                      telefon: +40 265 210 110
                      created_at: '2018-03-26 09:51:28'
                      updated_at: '2018-03-26 09:51:28'
                      deleted_at: null
                items:
                  $ref: '#/components/schemas/Unitati'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/unitati/parinte/{id}':
    get:
      summary: BROWSE - unitati cu un singur parinte
      description: >-
        Returneaza toate unitatile apartanand unei unitati parinte, bazat pe
        id-ul unitatii parinte
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: id-ul parintelui
      tags:
        - Unitati
      responses:
        '200':
          description: >-
            Success. Lista obiect JSON cu toate unitatile apartand de acelasi
            parinte.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 4
                    parent_id: 7
                    nume: SMURD National
                    descriere: null
                    adresa: null
                    cod_postal: null
                    telefon: null
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                    localitate: Targu-Mures
                    judet: Mures
                    departament_id: 1
                    parent: null
                    departament:
                      id: 1
                      nume: SMURD
                      descriere: >-
                        Scopul SMURD este transferul unui echipaj medical
                        spitalicesc, cu dotarea necesară, la locul unde se află
                        un pacient în stare critică, în vederea acordării de
                        asistență medicală de urgență calificată.
                      adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                      cod_postal: '540136'
                      localitate: Targu-Mures
                      judet: Mures
                      telefon: +40 265 210 110
                      created_at: '2018-03-26 09:51:28'
                      updated_at: '2018-03-26 09:51:28'
                      deleted_at: null
                  - id: 5
                    parent_id: 7
                    nume: SMURD National
                    descriere: null
                    adresa: null
                    cod_postal: null
                    telefon: null
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                    localitate: Targu-Mures
                    judet: Mures
                    departament_id: 1
                    parent: null
                    departament:
                      id: 1
                      nume: SMURD
                      descriere: >-
                        Scopul SMURD este transferul unui echipaj medical
                        spitalicesc, cu dotarea necesară, la locul unde se află
                        un pacient în stare critică, în vederea acordării de
                        asistență medicală de urgență calificată.
                      adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                      cod_postal: '540136'
                      localitate: Targu-Mures
                      judet: Mures
                      telefon: +40 265 210 110
                      created_at: '2018-03-26 09:51:28'
                      updated_at: '2018-03-26 09:51:28'
                      deleted_at: null
                items:
                  $ref: '#/components/schemas/Unitati'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/unitati/departament/{id}':
    get:
      summary: BROWSE - unitati din acelasi departament
      description: >-
        Returneaza toate unitatile apartanand unui departament, bazat pe id-ul
        departamentului
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: id-ul departamentului
      tags:
        - Unitati
      responses:
        '200':
          description: >-
            Success. Lista obiect JSON cu toate unitatile apartand de acelasi
            departament.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 4
                    parent_id: null
                    nume: SMURD National
                    descriere: null
                    adresa: null
                    cod_postal: null
                    telefon: null
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                    localitate: Targu-Mures
                    judet: Mures
                    departament_id: 1
                    parent: null
                  - id: 5
                    parent_id: 7
                    nume: SMURD National
                    descriere: null
                    adresa: null
                    cod_postal: null
                    telefon: null
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                    localitate: Targu-Mures
                    judet: Mures
                    departament_id: 1
                    parent:
                      id: 7
                      parent_id: null
                      nume: SMURD Test
                      descriere: null
                      adresa: null
                      cod_postal: null
                      telefon: null
                      created_at: '2018-03-26 16:39:21'
                      updated_at: '2018-03-26 16:39:21'
                      deleted_at: null
                      localitate: Targu-Mures
                      judet: Mures
                      departament_id: 1
                items:
                  $ref: '#/components/schemas/Unitati'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/unitate/{id}':
    get:
      summary: READ - unitate
      description: 'Returneaza o unitate bazat pe id, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID-ul unitatii
      tags:
        - Unitati
      responses:
        '200':
          description: Success. Obiect JSON cu unitate.
          content:
            application/json:
              schema:
                type: array
                example:
                  id: 4
                  parent_id: 7
                  nume: Statia centrala SMURD SIBIU
                  descriere: SMURD judet Sibiu
                  adresa: 'str. Vasile Carlova, nr.16-22'
                  cod_postal: '550017'
                  telefon: +40 269 123 456
                  created_at: '2018-03-26 10:25:29'
                  updated_at: '2018-03-28 08:37:34'
                  deleted_at: null
                  localitate: Sibiu
                  judet: Sibiu
                  departament_id: 1
                  parent:
                    id: 7
                    parent_id: null
                    nume: SMURD National
                    descriere: null
                    adresa: null
                    cod_postal: null
                    telefon: null
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                    localitate: Targu-Mures
                    judet: Mures
                    departament_id: 1
                  departament:
                    id: 1
                    nume: SMURD
                    descriere: >-
                      Scopul SMURD este transferul unui echipaj medical
                      spitalicesc, cu dotarea necesară, la locul unde se află un
                      pacient în stare critică, în vederea acordării de
                      asistență medicală de urgență calificată.
                    adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                    cod_postal: '540136'
                    localitate: Targu-Mures
                    judet: Mures
                    telefon: +40 265 210 110
                    created_at: '2018-03-26 09:51:28'
                    updated_at: '2018-03-26 09:51:28'
                    deleted_at: null
                items:
                  $ref: '#/components/schemas/Unitati'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /unitate/editare:
    put:
      summary: EDIT - editare unitate
      description: Editarea datelor unei unitati
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru editare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - request_id
              example:
                request_id: 8
                nume: Nume modificat Testare Unitate SMURD
              items:
                $ref: '#/components/schemas/Unitati'
      tags:
        - Unitati
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Unitate modificata cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: >-
                    Unitatea [Nume modificat Testare Unitate SMURD] modificata
                    cu succes.
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Localitate inexistenta.
  /unitate/adaugare:
    post:
      summary: ADD - inregistrare unitate noua
      description: Inregistrarea unei noi unitati
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru iregistrare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nume
                - departament_id
                - telefon
              example:
                nume: Unitate test
                parent_id: 7
                departament_id: 1
                descriere: Unitate SMURD pentru teste
                telefon: 0745 222333
              items:
                $ref: '#/components/schemas/Unitati'
      tags:
        - Unitati
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Unitate creata.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Unitate [Unitate test] creata.'
        200 Fail:
          description: Lipsa unui camp obligatoriu.
          content:
            application/json:
              schema:
                type: object
                example:
                  telefon:
                    - The telefon field is required.
  '/unitate/stergere/{id}':
    delete:
      summary: DELETE - unitate
      description: 'Sterge(soft) o unitate bazat pe id, inclusiv relatii'
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: id-ul unitatii
      tags:
        - Unitati
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Unitate stearsa cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: >-
                    Unitatea [Nume modificat Testare Unitate SMURD] stearsa cu
                    succes.
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Unitatea nu poate fi stearsa. Probabil nu exista.
  /departamente:
    get:
      summary: BROWSE - departamente
      description: Returneaza toata colectia Departamente
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      tags:
        - Departamente
      responses:
        '200':
          description: Success. Lista obiect JSON cu toate departamentele.
          content:
            application/json:
              schema:
                type: array
                example:
                  - id: 1
                    nume: SMURD
                    descriere: >-
                      Scopul SMURD este transferul unui echipaj medical
                      spitalicesc, cu dotarea necesară, la locul unde se află un
                      pacient în stare critică, în vederea acordării de
                      asistență medicală de urgență calificată.
                    adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                    cod_postal: '540136'
                    localitate: Targu-Mures
                    judet: Mures
                    telefon: +40 265 210 110
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                  - id: 2
                    nume: CivicTech
                    descriere: Dezvoltatorii aplicatiei de raportare DSU
                    adresa: 'Splaiul Unirii 165 Timpuri Noi Square, clădirea 2, etaj 1'
                    cod_postal: '030133'
                    localitate: Sector 3
                    judet: Bucuresti
                    telefon: +40 728 453 297
                    created_at: '2018-03-26 16:39:21'
                    updated_at: '2018-03-26 16:39:21'
                    deleted_at: null
                items:
                  $ref: '#/components/schemas/Departamente'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/departament/{id}':
    get:
      summary: READ - departament
      description: Returneaza un departament bazat pe id
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID-ul departamentului
      tags:
        - Departamente
      responses:
        '200':
          description: Success. Obiect JSON cu departamentul.
          content:
            application/json:
              schema:
                type: array
                example:
                  id: 1
                  nume: SMURD
                  descriere: >-
                    Scopul SMURD este transferul unui echipaj medical
                    spitalicesc, cu dotarea necesară, la locul unde se află un
                    pacient în stare critică, în vederea acordării de asistență
                    medicală de urgență calificată.
                  adresa: Str. Prof. Dr. Gheorghe Marinescu nr. 50
                  cod_postal: '540136'
                  localitate: Targu-Mures
                  judet: Mures
                  telefon: +40 265 210 110
                  created_at: '2018-03-26 16:39:21'
                  updated_at: '2018-03-26 16:39:21'
                  deleted_at: null
                items:
                  $ref: '#/components/schemas/Departamente'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /departament/editare:
    put:
      summary: EDIT - editare departament
      description: Editarea datelor unui departament
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru editare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - request_id
              example:
                request_id: 5
                nume: Nume modificat Testare Departament
              items:
                $ref: '#/components/schemas/Departamente'
      tags:
        - Departamente
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Departament modificat cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: >-
                    Departamentul [Nume modificat Testare Departament] modificat
                    cu succes.
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Departament inexistent.
  /departament/adaugare:
    post:
      summary: ADD - inregistrare departament nou
      description: Inregistrarea unui nou depatament
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            default: application/json
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
      requestBody:
        description: Datele pentru inregistrare
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nume
                - telefon
              example:
                nume: Departament test 1
                descriere: Departament pentru testare
                telefon: 0745 222333
              items:
                $ref: '#/components/schemas/Departamente'
      tags:
        - Departamente
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Departament creat.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: 'Departamentul [Departament test 1] creat.'
        200 Fail:
          description: Lipsa unui camp obligatoriu.
          content:
            application/json:
              schema:
                type: object
                example:
                  telefon:
                    - The telefon field is required.
  '/departament/stergere/{id}':
    delete:
      summary: DELETE - departament
      description: >-
        Sterge(soft) un departament bazat pe id, inclusiv relatii - unitati si
        utilizatori
      security:
        - apiKey: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            default: 'bearer {token}'
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: id-ul depatamentului
      tags:
        - Departamente
      responses:
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        200 Success:
          description: Departament stears cu succes.
          content:
            application/json:
              schema:
                type: object
                example:
                  message: success
                  description: >-
                    Departamentul [Nume modificat Testare Departament] sters cu
                    succes.
        200 Fail:
          description: 'Lipsa unui camp obligatoriu, id-ul de exemplu.'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: fail
                  description: Departamentul nu poate fi sters. Probabil nu exista.
components:
  responses:
    UnauthorizedError:
      description: 'Token-ul lipseste sau este incorect - ''{"error":"Unauthorized"}'''
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
  schemas:
    Users:
      type: object
      required:
        - id
        - email
        - parola
        - nume
        - prenume
        - role_id
        - telefon_s
        - unitate_id
      properties:
        id:
          type: integer
          format: int64
        role_id:
          type: integer
          format: int64
        unitate_id:
          type: integer
          format: int64
        nume:
          type: string
        prenume:
          type: string
        email:
          type: string
        parola:
          type: string
        telefon_s:
          type: string
        telefon_p:
          type: string
        adresa:
          type: string
        localitate:
          type: string
        cod_postal:
          type: string
        judet:
          type: string
        remember_token:
          type: string
        api_key:
          type: string
        api_key_expire:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    Roles:
      type: object
      required:
        - id
        - nume
      properties:
        id:
          type: integer
          format: int64
        nume:
          type: string
        display_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    Permissions:
      type: object
      required:
        - id
        - key
      properties:
        id:
          type: integer
          format: int64
        key:
          type: string
        table_name:
          type: string
        permission_group_id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    Localitati:
      type: object
      required:
        - id
        - judet_id
        - nume
      properties:
        id:
          type: integer
          format: int64
        judet_id:
          type: integer
          format: int64
        nume:
          type: string
        slug:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    Judete:
      type: object
      required:
        - id
        - nume
      properties:
        id:
          type: integer
          format: int64
        nume:
          type: string
        slug:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    Unitati:
      type: object
      required:
        - id
        - parent_id
        - departament_id
        - nume
      properties:
        id:
          type: integer
          format: int64
        parent_id:
          type: integer
          format: int64
        departament_id:
          type: integer
          format: int64
        nume:
          type: string
        descriere:
          type: string
        adresa:
          type: string
        cod_postal:
          type: string
        localitate:
          type: string
        judet:
          type: string
        telefon:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    Departamente:
      type: object
      required:
        - id
        - nume
        - telefon
      properties:
        id:
          type: integer
          format: int64
        nume:
          type: string
        descriere:
          type: string
        adresa:
          type: string
        cod_postal:
          type: string
        localitate:
          type: string
        judet:
          type: string
        telefon:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
